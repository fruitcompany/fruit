Class name,Department,Course Title,Description,Unit,Type,Year,Semester,AvailableCOMP 110,Computer Science,Introduction to Algorithm and Programming,"Introduction to algorithms, their representation, design, structuring, analysis and optimization. Implementation of algorithms as structured programs in a high level language.",3,LEC,2008,Fall,TRUECOMP 110L,Computer Science,Introduction to Algorithm and Programming Lab,The test is divided into three sections. The first section asks you to write an essay. The next two sections assess your ability to comprehend and interpret reading material and your understanding of sentence construction and paragraph development.,1,LAB,2008,Fall,TRUEMATH 150A,Mathematics,Calculus I,"Limits, derivatives, applications of differentiation. Definite and indefinite integrals, the Fundamental Theorem of Calculus.",5,LEC,2008,Fall,TRUEMATH 150AL,Mathematics,Calculus I Lab,"Required for all conditionally prepared students enrolled in MATH 150A. This is a NC/CR enrichment laboratory for students, i.e., this class itself has no credit, but students must have to pass for a credit in MATH 150A.",1,LAB,2008,Fall,TRUECOMP 122,Computer Science,Computer Architecture and Assembly Language,"Introduction to computer architecture, assembly language programming, system software and computer applications. Number systems and data representation. Internal organization of a computer. Primitive instructions and operations. Assembly language.",1,LEC,2008,Fall,TRUECOMP 122L,Computer Science,Computer Architecture and Assembly Language Lab,Three hours lab work per week.,1,LAB,2008,Fall,TRUECOMP 182,Computer Science,Data Structure and Program Design,"Introduction to data structures and the algorithms that use them. Review of composite data types such as arrays, records, strings, and sets. Role of the abstract data type in program design. Definition, implementation, and application of data structures such as stacks, queues, linked lists, trees, and graphs. Recursion. Use of time complexity expressions in evaluating algorithms. Comparative study of sorting and searching algorithms.",3,LEC,2008,Fall,TRUECOMP 182L,Computer Science,Data Structure and Program Design Lab,Three hours lab work per week.,1,LAB,2008,Fall,TRUECOMP 222,Computer Science,Computer Organization,Extension of basic addressing concepts to more advanced addressability such as base register and self-relative addressing. Comparative computer architecture focusing on such organizations as multiple register processors and stack machines. Basics of virtual memory input-output. Introduction to the concept of microprogrammable systems. Low level language translation process associated with assemblers. System functions such as relocatable loading and memory management. Application of data structure and hashing techniques to the above. Other related topics.,3,LEC,2009,Spring,TRUEMATH 150B,Mathematics,Calculus II,"Techniques of integration, numerical integration, improper integrals, applications of the integral. Taylor polynomials, sequences and series, power series.",5,LEC,2009,Spring,TRUEMATH 150BL,Mathematics,Calculus II Lab,"Required for all conditionally prepared students enrolled in MATH 150B. This is a NC/CR enrichment laboratory for students, i.e., it itself has no credit, but students must have to pass for a credit in MATH 150B.",1,LAB,2009,Spring,TRUEMATH 262,Mathematics,Introduction to Linear Algebra,"Systems of linear equations, matrices, determinants, eigenvalues, vector spaces, linear transformations, introduction to inner products on Rn, spectral theorem for symmetric matrices.",3,LEC,2009,Spring,TRUECOMP 256,Computer Science,Discrete Structure,"Study of discrete mathematical structures and proof techniques as used in computer science. Discrete structures such as functions, relations, sets, graphs, and trees. Proof techniques such as proof by induction, proof by contradiction, and proof by cases. Counting techniques.",3,LEC,2009,Spring,TRUECOMP 256L,Computer Science,Discrete Structure Lab,Three hours lab work per week.,1,LAB,2009,Spring,TRUEMATH 326,Mathematics,Discrete Mathematics,"Propositional calculus, predicate calculus, set algebra, relations, functions, mappings, fields, number systems.",3,LEC,2009,Fall,TRUECOMP 282,Computer Science,Advanced Data Structures,"Introduction to advanced data structures (particularly persistent structures) using object-oriented design. Main memory structures: hash tables, trees. Architectural foundations for files. Large-scale sorting. Hash-based persistent structures. Indexed files. Introduction to databases.",3,LEC,2009,Fall,TRUECOMP 322,Computer Science,Introduction to Operating System and System Architecture,"Examination of the principal types of systems including batch, multi-programming, and time-sharing. Discusses networked system. Considers the salient problems associated with implementing systems including interrupt of event driven systems, multi-tasking, storage and data base management, and input-output. Emphasizes some of the simple algorithms used to solve common problems encountered such as deadlocks, queue service, and multiple access to data.",3,LEC,2009,Fall,TRUECOMP 322L,Computer Science,Introduction to Operating System and System Architecture Lab,Projects are implemented to reinforce the lectures. Three hours lab work per week.,1,LAB,2009,Fall,TRUEMATH 341,Mathematics,Applied Statistics I,"Introduction to the practice of statistics, emphasizing the role of probability. Includes basic probability, discrete and continuous probability distributions, expectation and variance, sample surveys and experiments, displaying and summarizing data, sampling distributions, central limit theorem, inference for proportions, chi-square test, least squares regression. ",3,LEC,2009,Fall,TRUECOMP 333,Computer Science,Concepts of Programming Languages,"Discussion of issues in the design, implementation, and use of high-level programming languages through a historical framework. Including how languages reflect different design philosophies and use requirements and the technical issues in the design of main abstraction constructs of programming languages. Other approaches to imperative or object oriented programming: functional programming, logical programming, and parallel programming.",3,LEC,2010,Spring,TRUECOMP 310,Computer Science,"Automata, Languages, and Computation","Study of the relation of languages (i.e. sets of strings) and machines for processing these languages, with emphasis on classes of languages and corresponding classes of machines. Phrase structure languages and grammar. Types of grammar and classes of languages. Regular languages and finite state automata. Context-free languages and pushdown automata. Unrestricted languages and Turing Machines. Computability models of Turing, Church, Markov, and McCarthy. Applications to programming languages, compiler design, and program design and testing.",3,LEC,2010,Spring,TRUEMATH 482,Mathematics,Combined Algorithm,"some computer programming experience. Computer oriented study of seminumerical and non-numerical algorithms. Sorting, tree searching, generation of combinatorial structures, algorithm proof techniques, best algorithms, programming complexity.",3,LEC,2010,Spring,TRUECOMP 380,Computer Science,Introduction to Software Engineering,"Concepts and techniques for systems engineering, requirements analysis, design, implementation and testing of large scale computer systems. Principles of software engineering for production of reliable, maintainable and portable software products. Emphasis on object-oriented analysis and design techniques. Topics include unit, integration and systems testing, configuration management, software quality assurance practices, and an introduction to Computer Aided Software Engineering (CASE). ",2,LEC,2010,Spring,TRUECOMP 380L,Computer Science,Introduction to Software Engineering Lab,Projects are implemented to reinforce the lectures. Three hours lab work per week.,1,LAB,2010,Spring,TRUECOMP 450,Computer Science,Societal Issues in Computing,"Survey course on the role of the digital computer in modern society. The dangers of the misuse of computers (as in the invasion of privacy), as well as the proper and intelligent use of the machines, are discussed.",3,LEC,2010,Fall,TRUECOMP 490,Computer Science,Senior Design Project ,"Project-oriented course to allow students to apply their knowledge of software engineering to the design and implementation of a system to solve a real world problem. Students select and specify a suitable problem, investigate design alternatives and select an appropriate one, implement a solution, and verify and validate the result, all as part of a team effort. The role of digital computers in modern society are investigated including the dangers of computer misuse, as well as the proper and intelligent use of computers. Ethical concerns of software professionals are studied. ",3,LEC,2010,Fall,TRUECOMP 490L,Computer Science,Senior Design Project Lab,Three hours lab work per week. Real-world project implementation in the academic enrironment.,1,LAB,2010,Fall,TRUECOMP 491L,Computer Science,Senior Project Lab,"Project-oriented laboratory to allow students complete the design, implementation, and testing of the team based software engineering project started in COMP 490L. ",1,LAB,2010,Fall,TRUECOMP 410,Computer Science,Logic Programming,"Programming techniques in the logic programming language PROLOG. Prenex conjunctive normal form and grammatical algorithms. Tableaux, sequenzen, resolution, and other semi-decision procedures. Closures of relations, fixed point theory, control mechanisms, relationship to functional programming.",3,LEC,2011,Spring,TRUECOMP 424,Computer Science,Computer System Security,"Analysis of the need for computer system security, and the security techniques in operating systems, data bases, and computer networks. Supporting techniques such as auditing, risk analysis, and cost-benefit tradeoffs are discussed.",3,LEC,2011,Spring,TRUECOMP 426,Computer Science,Fault-Tolerant Software and Computing,"An examination of dependability requirements in computing, and the basic principles of system-level reliability and fault-tolerance. Software-based implementation of fault-tolerance in distributed systems. Fault-tolerant software and data bases: reliability modeling, fault-tolerance techniques (e.g., recovery blocks, N-version programming), and design approaches.",3,LEC,2011,Spring,TRUECOMP 429,Computer Science,Computer Network Software,"Basic software design and analysis considerations in networking computers into coherent, cooperating systems capable of processing computational tasks in a distributed manner. Network topology, routing procedures, message multiplexing and process scheduling techniques.",3,LEC,2011,Spring,TRUE